name: Server CD

on:
  workflow_dispatch:
  push:
    branches: [ 'main', 'dev' ]
    paths: [ 'server/**' ]

env:
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}

jobs:
  build:
    name: Build Jar and Docker Image
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: server

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew clean bootJar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Docker Image Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./server
          platforms: linux/amd64
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}

  deploy:
    name: Deploy with Docker
    needs: build
    runs-on: [ self-hosted ]
    timeout-minutes: 5
    defaults:
      run:
        working-directory: server

    steps:
      # compose.yml 파일을 사용하기 위해 코드를 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 컨테이너를 종료하지 않아도 종료 후 실행됨 (추정)
      - name: Docker run
        run: sudo docker compose -f compose.yml up -d

      # 모든 사용되지 않는 이미지 삭제
      - name: Docker remove unused images
        run: sudo docker image prune -af

      # 모든 컨테이너 리스트 출력 (디버깅용)
      - name: Docker container list
        run: sudo docker container ps -a
