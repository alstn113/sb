name: Server CD

on:
  push:
    branches: ['main', 'dev']
    paths: ['server/**']

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew clean bootjar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Docker remove
        run: |
          containers=$(docker ps -a -q)
          if [ -n "$containers" ]; then
            docker stop $containers
            docker rm $containers
          else
            echo "No containers to stop and remove."
          fi

          images=$(docker images -q)
          if [ -n "$images" ]; then
            docker rmi $images
          else
            echo "No images to remove."
          fi
      - name: Docker pull
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}
      - name: Docker run
        run: docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}
